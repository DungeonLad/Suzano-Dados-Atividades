-- criação do banco de dados para o cenário de e-commerce)
drop database ecommerce;
create database ecommerce;
use ecommerce;

-- criar tabela cliente--
create table clients(
	idClient int auto_increment primary key,
    Fname varchar(15),
    Minit char(3),
    Lname varchar(15),
	CPF char(11) not null,
    constraint unique_cpf_client unique (CPF),
    client_address varchar(15) not null
    );

alter table clients auto_increment=1;

-- criar tabela produto -- 
-- size = dimensão do produto
create table product(
	idProduct int auto_increment primary key unique,
    Pname varchar(10) not null,
    category enum('Eletrônico', 'Vestimenta', 'Brinquedos', 'Alimentos', 'Móveis') not null,
    classification_kids bool default false,
    price float not null,
	rating enum('0','1','2','3','4','5') default 0,
    size varchar(10)
    );

alter table product auto_increment=1;

-- criar tabela pagamentos - 
-- para desafio: terminar de implementar e conectar com tabelas necessárias
create table payments(
	idClientPayment int unique,
    id_payment int auto_increment, 
	payment_type enum('Cartão', 'Boleto', 'Dois Cartões') not null,
    payment_price float,
    primary key (idClientPayment, id_payment),
    UNIQUE (id_payment),
    payment_status enum ('Processando', 'Recusado', 'Pago') not null default 'Processando'
    );

alter table payments auto_increment=1;

    
    
-- criar tabela pedido -- 
create table orders(
	idOrder int auto_increment unique,
    idOrderClient int, 
    idOrderPayment int,
    primary key (idOrder, idOrderPayment),
    orderStatus enum ('Cancelado', 'Confirmado', 'Em processamento') default 'Em processamento' not null,
	orderDescription varchar(255),
    shipping float default 10,
    paymentCash bool default false,
    constraint fk_orders_payment foreign key (idOrderPayment) references payments(id_payment),
    constraint fk_orders_client foreign key (idOrderClient) references clients(idClient)
		on update cascade
    );

alter table orders auto_increment=1;

-- criar tabela estoque
    create table productStorage(
		idProdStorage int auto_increment primary key,
        storagelocation varchar(45),
        Quantity int default 0
        );
        
alter table productStorage auto_increment=1;
-- criar tabela fornecedor
create table Supplier(
	idSupplier int auto_increment primary key,
    SocialName varchar(45) not null,
    CNPJ char(14) not null,
    contact char(11) not null,
    constraint unique_supplier unique (CNPJ)
    );
    
alter table Supplier auto_increment=1;

-- criar tabela fornecedor do produto
create table ProductSupplier(
	idPsSupplier int,
    idPsProduct int,
    quantity int not null,
    primary key (idPsSupplier, idPsProduct),
    constraint fk_product_supplier_supplier foreign key (idPsSupplier) references supplier(idSupplier),
    constraint fk_product_supplier_product foreign key (idPsProduct) references product(idProduct)
);

-- criar tabela vendedor
create table Seller(
	idSeller int auto_increment primary key,
    SocialName varchar(45) not null,
    Address varchar(255) not null,
    SellerCNPJ char(14),
    SellerCPF char(9),
    contact char(11) not null,
    constraint unique_cnpj_seller unique (SellerCNPJ),
    constraint unique_cpf_seller unique (SellerCPF)
    );

alter table Seller auto_increment=1;
    
-- criar tabela produto-vendedor

create table productSeller(
	idProductSeller int,
    idProductSold int,
    productQuantity int default 1, 
    primary key (idProductSeller, idProductSold),
    constraint fk_Product_Seller foreign key (idProductSeller) references Seller(idSeller),
    constraint fk_Product_Product foreign key (idProductSold) references product(idProduct)
);

drop table productOrder;

create table productOrder(
	idPOproduct int,
    idPOorder int,
    poQuantity int default 1,
    poStatus enum('Disponível', 'Indisponível') default 'Disponível',
    primary key (idPOproduct, idPOorder),
    constraint fk_ProductOrder_Product foreign key (idPOproduct) references product(idProduct),
    constraint fk_Product_Order foreign key (idPOorder) references orders(idOrder)
);

create table storageLocation(
	idLproduct int,
    idLstorage int,
    location varchar(255) not null,
    primary key (idLproduct, idLstorage),
    constraint fk_storage_location_product foreign key (idLproduct) references product(IdProduct),
    constraint fk_storage_location_storage foreign key (idLstorage) references productStorage(idProdStorage)
    );
